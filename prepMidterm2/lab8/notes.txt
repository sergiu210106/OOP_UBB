File input-output in C++

There are three classes in C++ that allow file input-output operations: ifstream - suitable for reading data from
a file, ofstream suitable for writing data from a file, and fstream suitable for input-output operations. To use
these classes you need to include the fstream header.

When working with files, you just need to create an object of the appropriate class, pass the file path/filename
as a parameter and then use the stream operators to work with the file. An alternative would be to use the
default constructor of the file stream classes and open the file explicitly with the open(path, mode) function; this
function takes as parameters the path to the file and a mode in which the file should be opened, as described
in the table below:

// see image.png

After working with the file, you can explicitly close it - by calling the close() function, or let the stream object
go out of scope (the destructor automatically closes the file).

Below you have an example of how you can use ofstream to write data to a file:

// see example1.cpp

This code will create the file my_file.txt in your working directory with the following content:

Here are the first 100 natural numbers
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38
39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73
74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100

Now letâ€™s see how we can use an ifstream object to read data from the file my_file.txt. On ifstream objects you
can use the stream extraction operator (but this operator stops at spaces), as well as other input functions
such as getline (to read entire lines). The ifstream object evaluates to false if one of the error flags are set.

// see example2.cpp

