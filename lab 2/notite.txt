* -> se declara un pointer
& -> deferentiere

pointer = adresa in memorie a unei variabile



#include <stdio.h>
#include <stdlib.h>

void swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

int *f(int arr[], int n) {

    int mx = -2147483647;
    int* res = (int*) malloc(3 * sizeof(int));

    for (int i = 0; i < n; i++) {
        for (int j = i+1; j < n; j++) {
            for (int k = j+1; k < n; k++) {
                if (arr[i] * arr[j] * arr[k] > mx) {
                    mx = arr[i] * arr[j] * arr[k];
                    res[0] = arr[i], res[1] = arr[j], res[2] = arr[k];
                    if (res[0] > res[1])
                        swap(&res[0], &res[1]);
                    if (res[0] > res[2])
                        swap(&res[1], &res[2]);
                    if (res[1] > res[2])
                        swap(&res[0], &res[2]);
                }
            }
        }
    }
    return res;
}

const char * my_strchr( const char * str, char character ) {
    char *p = str;
    while (*p != '\0') {
        if (*p == character)
            return p;
        p++;
    }
    return NULL;
}

int main() {
    int n;
    scanf("%d", &n);
    int arr[n];
    for (int i = 0; i < n; i++)
        scanf("%d", &arr[i]);
    int *result = f(arr, n);

    for (int i = 0; i < 3; i ++)
        printf("%d ", result[i]);

    free(result);
    return 0;
}



#include <stdio.h>
#include <stdlib.h>

const char * my_strchr( const char * str, char character ) {
    char *p = str;
    while (*p != '\0') {
        if (*p == character)
            return p;
        p++;
    }
    return NULL;
}

int main() {
    char str[100];
    scanf("%s", str);

    printf("%s", my_strchr(str, 'p'));

    return 0;
}
